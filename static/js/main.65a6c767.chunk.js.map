{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","Script","text","type","this","processText","i","arrOut","out","scripts","superScript","length","push","STANDARD","SUPER","n","getType","getText","CalcButton","props","onClick","handler","value","className","name","Component","Form","handleFormChange","e","setState","target","handleButton","inputValue","state","visible","readOnly","onChange","Page","handleRadioChange","editMode","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wJAAAA,EAAOC,QAAU,IAA0B,kC,qICIrCC,G,uBAKJ,WAAYC,EAAMC,GAAO,oBACvBC,KAAKF,KAAOA,EACZE,KAAKD,KAAOA,E,sDAGZ,OAAOC,KAAKF,O,gCAGZ,OAAOE,KAAKD,S,MAehB,SAASE,EAAYH,GACnB,IAAII,EACAC,EAAS,GACTC,EAAM,GACNC,EAAU,GACVC,GAAc,EAClB,IAAKJ,EAAI,EAAGA,EAAIJ,EAAKS,OAAQL,IAa3B,GAZgB,MAAZJ,EAAKI,IACPG,EAAQG,KAAK,IAAIX,EAAOO,EAAKP,EAAOY,WACpCL,EAAM,GACNE,GAAc,IAEG,MAAZR,EAAKI,IAA0B,MAAZJ,EAAKI,KAAeI,IAC1CD,EAAQG,KAAK,IAAIX,EAAOO,EAAKP,EAAOa,QACpCN,EAAM,GACNE,GAAc,GAEhBF,GAAON,EAAKI,IAEVA,IAAMJ,EAAKS,OAAS,EAAG,CACrBD,EACFD,EAAQG,KAAK,IAAIX,EAAOO,EAAKP,EAAOa,QAEpCL,EAAQG,KAAK,IAAIX,EAAOO,EAAKP,EAAOY,WAEtC,IAAIE,OAAC,EACL,IAAKA,EAAI,EAAGA,EAAIN,EAAQE,OAAQI,IAC1BN,EAAQM,GAAGC,YAAcf,EAAOY,SAClCN,EAAOK,KAAK,8BAAOH,EAAQM,GAAGE,YACrBR,EAAQM,GAAGC,YAAcf,EAAOa,OACzCP,EAAOK,KAAK,6BAAMH,EAAQM,GAAGE,YAKrC,OAAOV,EA/DHN,EACGY,SAAW,EADdZ,EAEGa,MAAQ,E,IAgEXI,E,YACJ,WAAYC,GAAQ,qEACZA,I,sEAGN,OACI,4BAAQC,QAAShB,KAAKe,MAAME,QAASC,MAAOlB,KAAKe,MAAMG,MAAOC,UAAW,YAAanB,KAAKe,MAAMK,U,GANhFC,aAWnBC,E,YACJ,WAAYP,GAAQ,IAAD,8BACjB,4CAAMA,KAMRQ,iBAAmB,SAACC,GAClB,EAAKC,SAAS,CACZ3B,KAAMG,EAAYuB,EAAEE,OAAOR,UATZ,EAYnBS,aAAe,SAACH,GACd,EAAKC,SAAS,CACZG,WAAY,EAAKC,MAAMD,WAAaJ,EAAEE,OAAOR,SAZ/C,EAAKW,MAAQ,CACX/B,KAAM,GACN8B,WAAY,IAJG,E,sEAkBjB,MAA2B,MAAvB5B,KAAKe,MAAMe,QAET,6BACE,2BAAI9B,KAAK6B,MAAM/B,MACf,6BACE,+CACA,2BAAOiC,UAAU,EAAMb,MAAOlB,KAAK6B,MAAMD,WAAYZ,QAAShB,KAAKuB,iBAAkBS,SAAUhC,KAAKuB,oBAEtG,yBAAKJ,UAAW,QACd,kBAAC,EAAD,CAAYF,QAASjB,KAAK2B,aAAcT,MAAO,EAAGE,KAAM,IACxD,kBAAC,EAAD,CAAYH,QAASjB,KAAK2B,aAAcT,MAAO,EAAGE,KAAM,IACxD,kBAAC,EAAD,CAAYH,QAASjB,KAAK2B,aAAcT,MAAO,EAAGE,KAAM,KAE1D,6BACA,yBAAKD,UAAW,QACd,kBAAC,EAAD,CAAYF,QAASjB,KAAK2B,aAAcT,MAAO,EAAGE,KAAM,IACxD,kBAAC,EAAD,CAAYH,QAASjB,KAAK2B,aAAcT,MAAO,EAAGE,KAAM,IACxD,kBAAC,EAAD,CAAYH,QAASjB,KAAK2B,aAAcT,MAAO,EAAGE,KAAM,KAE1D,6BACA,yBAAKD,UAAW,QACd,kBAAC,EAAD,CAAYF,QAASjB,KAAK2B,aAAcT,MAAO,EAAGE,KAAM,IACxD,kBAAC,EAAD,CAAYH,QAASjB,KAAK2B,aAAcT,MAAO,EAAGE,KAAM,IACxD,kBAAC,EAAD,CAAYH,QAASjB,KAAK2B,aAAcT,MAAO,EAAGE,KAAM,KAE1D,6BACA,yBAAKD,UAAW,QACd,kBAAC,EAAD,CAAYF,QAASjB,KAAK2B,aAAcT,MAAO,IAAKE,KAAM,MAC1D,kBAAC,EAAD,CAAYH,QAASjB,KAAK2B,aAAcT,MAAO,EAAGE,KAAM,IACxD,kBAAC,EAAD,CAAYH,QAASjB,KAAK2B,aAAcT,MAAO,IAAKE,KAAM,QAK5D,S,GArDOC,aAyDbY,E,YACJ,WAAYlB,GAAQ,IAAD,8BACjB,4CAAMA,KAKRmB,kBAAoB,SAACV,GACnB,EAAKC,SAAS,CACZU,SAAUX,EAAEE,OAAOR,SANrB,EAAKW,MAAQ,CACXM,SAAU,KAHK,E,sEAYjB,OACI,yBAAKhB,UAAW,YACd,yBAAKA,UAAW,QACd,2BAAOpB,KAAK,QAAQqB,KAAK,OAAOF,MAAM,IAAIc,SAAUhC,KAAKkC,oBAD3D,OACmF,6BACjF,2BAAOnC,KAAK,QAAQqB,KAAK,OAAOF,MAAM,IAAIc,SAAUhC,KAAKkC,oBAF3D,OAEmF,8BAEnF,kBAAC,EAAD,CAAMJ,QAAS9B,KAAK6B,MAAMM,gB,GAnBjBd,aAkCJe,MATf,WACE,OACE,6BACE,wBAAIjB,UAAW,SAAf,WACA,kBAAC,EAAD,QC3JckB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.65a6c767.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass Script {\n  static STANDARD = 0;\n  static SUPER = 1;\n  type;\n  text;\n  constructor(text, type) {\n    this.text = text;\n    this.type = type;\n  }\n  getText() {\n    return this.text;\n  }\n  getType() {\n    return this.type;\n  }\n}\n\nfunction isOperator(char) {\n  const operators = ['+', '-', '*', '='];\n  let i;\n  for (i = 0; i < operators; i ++) {\n    if (char === operators[i]) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction processText(text) {\n  let i;\n  let arrOut = [];\n  let out = '';\n  let scripts = [];\n  let superScript = false;\n  for (i = 0; i < text.length; i ++) {\n    if (text[i] === '^') {\n      scripts.push(new Script(out, Script.STANDARD));\n      out = '';\n      superScript = true;\n    } else {\n      if ((text[i] === '+' || text[i] === '-') && superScript) {\n        scripts.push(new Script(out, Script.SUPER));\n        out = '';\n        superScript = false;\n      }\n      out += text[i];\n    }\n    if (i === text.length - 1) {\n      if (superScript) {\n        scripts.push(new Script(out, Script.SUPER));\n      } else {\n        scripts.push(new Script(out, Script.STANDARD));\n      }\n      let n;\n      for (n = 0; n < scripts.length; n ++) {\n        if (scripts[n].getType() === Script.STANDARD) {\n          arrOut.push(<span>{scripts[n].getText()}</span>);\n        } else if (scripts[n].getType() === Script.SUPER) {\n          arrOut.push(<sup>{scripts[n].getText()}</sup>);\n        }\n      }\n    }\n  }\n  return arrOut;\n}\n\nclass CalcButton extends Component{\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return(\n        <button onClick={this.props.handler} value={this.props.value} className={'centered'}>{this.props.name}</button>\n    )\n  }\n}\n\nclass Form extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '',\n      inputValue: '',\n    };\n  }\n  handleFormChange = (e) => {\n    this.setState({\n      text: processText(e.target.value),\n    });\n  };\n  handleButton = (e) => {\n    this.setState({\n      inputValue: this.state.inputValue + e.target.value,\n    });\n  };\n  render() {\n    if (this.props.visible === '1') {\n      return(\n          <div>\n            <p>{this.state.text}</p>\n            <div>\n              <label>Expression: </label>\n              <input readOnly={true} value={this.state.inputValue} onClick={this.handleFormChange} onChange={this.handleFormChange}/>\n            </div>\n            <div className={'menu'}>\n              <CalcButton handler={this.handleButton} value={1} name={1}/>\n              <CalcButton handler={this.handleButton} value={2} name={2}/>\n              <CalcButton handler={this.handleButton} value={3} name={3}/>\n            </div>\n            <br/>\n            <div className={'menu'}>\n              <CalcButton handler={this.handleButton} value={4} name={4}/>\n              <CalcButton handler={this.handleButton} value={5} name={5}/>\n              <CalcButton handler={this.handleButton} value={6} name={6}/>\n            </div>\n            <br/>\n            <div className={'menu'}>\n              <CalcButton handler={this.handleButton} value={7} name={7}/>\n              <CalcButton handler={this.handleButton} value={8} name={8}/>\n              <CalcButton handler={this.handleButton} value={9} name={9}/>\n            </div>\n            <br/>\n            <div className={'menu'}>\n              <CalcButton handler={this.handleButton} value={'^'} name={'^'}/>\n              <CalcButton handler={this.handleButton} value={0} name={0}/>\n              <CalcButton handler={this.handleButton} value={'+'} name={'+'}/>\n            </div>\n          </div>\n      )\n    }\n    return (null);\n  }\n}\n\nclass Page extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editMode: '1',\n    };\n  }\n  handleRadioChange = (e) => {\n    this.setState({\n      editMode: e.target.value,\n    });\n  };\n  render() {\n    return(\n        <div className={'centered'}>\n          <div className={'menu'}>\n            <input type=\"radio\" name=\"edit\" value=\"0\" onChange={this.handleRadioChange}/>Home<br/>\n            <input type=\"radio\" name=\"edit\" value=\"1\" onChange={this.handleRadioChange}/>Edit<br/>\n          </div>\n          <Form visible={this.state.editMode}/>\n        </div>\n    )\n  }\n}\n\nfunction App() {\n  return (\n    <div>\n      <h1 className={'title'}>eg0000r</h1>\n      <Page/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}